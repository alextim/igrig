name: Auto Deploy
on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.event.ref }}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: ${{ github.event.ref }}
          # token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Set development env
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          echo "BRANCH_NAME=dev" >> $GITHUB_ENV
          echo "NO_INDEX=${{ secrets.NO_INDEX }}" >> $GITHUB_ENV
          echo "NETLIFY_AUTH_TOKEN=${{ secrets.NETLIFY_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "NETLIFY_SITE_ID=${{ secrets.NETLIFY_SITE_ID }}" >> $GITHUB_ENV

      - name: Set production env
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "BRANCH_NAME=main" >> $GITHUB_ENV
          echo "NO_INDEX=${{ secrets.NO_INDEX_IGRIG }}" >> $GITHUB_ENV
          echo "NETLIFY_AUTH_TOKEN=${{ secrets.NETLIFY_AUTH_TOKEN_IGRIG }}" >> $GITHUB_ENV
          echo "NETLIFY_SITE_ID=${{ secrets.NETLIFY_SITE_ID_IGRIG }}" >> $GITHUB_ENV

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Installing dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build the project
        run: yarn run gatsby build
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          WARNINGS: ${{ secrets.WARNINGS }}
          NO_INDEX: ${{ env.NO_INDEX }}

      - name: Check build
        if: ${{ failure() }}
        run: |
          echo "AT_STATE=Build: failed" >> $GITHUB_ENV

      - name: Deploy to Netlify
        if: ${{ success() }}
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=public --prod

      - name: Check deploy
        if: ${{ failure() && env.AT_STATE == ''}}
        run: |
          echo "AT_STATE=Deploy: failed" >> $GITHUB_ENV

      - name: Set message on success
        if: ${{ success() }}
        run: |
          echo "AT_STATE=Deploy: OK" >> $GITHUB_ENV

      - name: Send to Telegram
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: "${{ env.AT_STATE }}, branch: ${{ env.BRANCH_NAME }}, ${{ github.event.head_commit.message }}"
